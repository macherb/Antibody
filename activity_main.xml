package com.example.antibody;

import android.support.v7.app.ActionBarActivity;
import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;

public class MainActivity extends Activity implements View.OnClickListener {

	private	char		solutions,
						antibodies[];

	private TextView	mD1,
						mBigC1,
						mBigE1,
						mLittleC1,
						mLittleE1,
						mF1,
						mCW1,
						mV1,
						mBigK1,
						mLittleK1,

						mD2,
						mBigC2,
						mBigE2,
						mLittleC2,
						mLittleE2,
						mF2,
						mCW2,
						mV2,
						mBigK2,
						mLittleK2,

						mD3,
						mBigC3,
						mBigE3,
						mLittleC3,
						mLittleE3,
						mF3,
						mCW3,
						mV3,
						mBigK3,
						mLittleK3,

						mD4,
						mBigC4,
						mBigE4,
						mLittleC4,
						mLittleE4,
						mF4,
						mCW4,
						mV4,
						mBigK4,
						mLittleK4,

						mSolution;

	private CheckBox	mCheck1,
						mCheck2,
						mCheck3,
						mCheck4;
	
	private Button		mCalculate;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		mD1 =			(TextView	)findViewById(R.id.textD1			);
		mBigC1 =		(TextView	)findViewById(R.id.textBigC1		);
		mBigE1 =		(TextView	)findViewById(R.id.textBigE1		);
		mLittleC1 =		(TextView	)findViewById(R.id.textLittleC1		);
		mLittleE1 =		(TextView	)findViewById(R.id.textLittleE1		);
		mF1 =			(TextView	)findViewById(R.id.textF1			);
		mCW1 =			(TextView	)findViewById(R.id.textCW1			);
		mV1 =			(TextView	)findViewById(R.id.textV1			);
		mBigK1 =		(TextView	)findViewById(R.id.textBigK1		);
		mLittleK1 =		(TextView	)findViewById(R.id.textLittleK1		);

		mD2 =			(TextView	)findViewById(R.id.textD2			);
		mBigC2 =		(TextView	)findViewById(R.id.textBigC2		);
		mBigE2 =		(TextView	)findViewById(R.id.textBigE2		);
		mLittleC2 =		(TextView	)findViewById(R.id.textLittleC2		);
		mLittleE2 =		(TextView	)findViewById(R.id.textLittleE2		);
		mF2 =			(TextView	)findViewById(R.id.textF2			);
		mCW2 =			(TextView	)findViewById(R.id.textCW2			);
		mV2 =			(TextView	)findViewById(R.id.textV2			);
		mBigK2 =		(TextView	)findViewById(R.id.textBigK2		);
		mLittleK2 =		(TextView	)findViewById(R.id.textLittleK2		);

		mD3 =			(TextView	)findViewById(R.id.textD3			);
		mBigC3 =		(TextView	)findViewById(R.id.textBigC3		);
		mBigE3 =		(TextView	)findViewById(R.id.textBigE3		);
		mLittleC3 =		(TextView	)findViewById(R.id.textLittleC3		);
		mLittleE3 =		(TextView	)findViewById(R.id.textLittleE3		);
		mF3 =			(TextView	)findViewById(R.id.textF3			);
		mCW3 =			(TextView	)findViewById(R.id.textCW3			);
		mV3 =			(TextView	)findViewById(R.id.textV3			);
		mBigK3 =		(TextView	)findViewById(R.id.textBigK3		);
		mLittleK3 =		(TextView	)findViewById(R.id.textLittleK3		);

		mD4 =			(TextView	)findViewById(R.id.textD4			);
		mBigC4 =		(TextView	)findViewById(R.id.textBigC4		);
		mBigE4 =		(TextView	)findViewById(R.id.textBigE4		);
		mLittleC4 =		(TextView	)findViewById(R.id.textLittleC4		);
		mLittleE4 =		(TextView	)findViewById(R.id.textLittleE4		);
		mF4 =			(TextView	)findViewById(R.id.textF4			);
		mCW4 =			(TextView	)findViewById(R.id.textCW4			);
		mV4 =			(TextView	)findViewById(R.id.textV4			);
		mBigK4 =		(TextView	)findViewById(R.id.textBigK4		);
		mLittleK4 =		(TextView	)findViewById(R.id.textLittleK4		);

		mSolution =		(TextView	)findViewById(R.id.textSolution		);
		
		mCheck1 =		(CheckBox	)findViewById(R.id.check1			);
		mCheck2 =		(CheckBox	)findViewById(R.id.check2			);
		mCheck3 =		(CheckBox	)findViewById(R.id.check3			);
		mCheck4 =		(CheckBox	)findViewById(R.id.check4			);

		mCalculate =	(Button		)findViewById(R.id.buttonCalculate	);
        mCalculate.setOnClickListener(this);

        antibodies =	new char[10];
        
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	public void onClick(View v) {
		char	i;

		solutions =	0;

		for (i = 0; i < 10; i++)
			antibodies[i] =	0;

		if      ( mCheck1.isChecked() &&  mCheck2.isChecked() &&  mCheck3.isChecked() &&  mCheck4.isChecked())
			mSolution.setText("Inconclusive");
		else if (!mCheck1.isChecked() && !mCheck2.isChecked() && !mCheck3.isChecked() && !mCheck4.isChecked())
			mSolution.setText("Too weak");
		else
		{
			mSolution.setText("");
			if (!mCheck1.isChecked())//Can use this row to cross out
			{
				CrossOut1(1, mBigC1, mLittleC1, 1, "C");
				CrossOut2(3, mBigC1, mLittleC1, 1, "c");
				CrossOut1(2, mBigE1, mLittleE1, 1, "E");
				CrossOut2(4, mBigE1, mLittleE1, 1, "e");
				CrossOut1(8, mBigK1, mLittleK1, 1, "K");
				CrossOut2(9, mBigK1, mLittleK1, 1, "k");
			}
			if (!mCheck2.isChecked())//Can use this row to cross out
			{
				CrossOut1(1, mBigC2, mLittleC2, 2, "C");
				CrossOut2(3, mBigC2, mLittleC2, 2, "c");
				CrossOut1(2, mBigE2, mLittleE2, 2, "E");
				CrossOut2(4, mBigE2, mLittleE2, 2, "e");
				CrossOut1(8, mBigK2, mLittleK2, 2, "K");
				CrossOut2(9, mBigK2, mLittleK2, 2, "k");
			}
			if (!mCheck3.isChecked())//Can use this row to cross out
			{
				CrossOut1(1, mBigC3, mLittleC3, 3, "C");
				CrossOut2(3, mBigC3, mLittleC3, 3, "c");
				CrossOut1(2, mBigE3, mLittleE3, 3, "E");
				CrossOut2(4, mBigE3, mLittleE3, 3, "e");
				CrossOut1(8, mBigK3, mLittleK3, 3, "K");
				CrossOut2(9, mBigK3, mLittleK3, 3, "k");
			}
			if (!mCheck4.isChecked())//Can use this row to cross out
			{
				CrossOut1(1, mBigC4, mLittleC4, 4, "C");
				CrossOut2(3, mBigC4, mLittleC4, 4, "c");
				CrossOut1(2, mBigE4, mLittleE4, 4, "E");
				CrossOut2(4, mBigE4, mLittleE4, 4, "e");
				CrossOut1(8, mBigK4, mLittleK4, 4, "K");
				CrossOut2(9, mBigK4, mLittleK4, 4, "k");
			}
			Use1ToGetSolutions();
			Use2ToGetSolutions();
			Use3ToGetSolutions();
			Use4ToGetSolutions();
		}
	}

	void CrossOut1(int index, TextView Big, TextView Little, int cell, String letter)
	{
		if (
			(antibodies[index] < 255)
			&&
			(Big.getText().equals("+") && Little.getText().equals("0"))
		   )
		{
			Log.d("Antibody", "Using " + cell + " to cross out " + letter);
			antibodies[index] =	255;
		}
	}

	void CrossOut2(int index, TextView Big, TextView Little, int cell, String letter)
	{
		if (
			(antibodies[index] < 255)
			&&
			(Big.getText().equals("0") && Little.getText().equals("+"))
		   )
		{
			Log.d("Antibody", "Using " + cell + " to cross out " + letter);
			antibodies[index] =	255;
		}
	}

	void Use1ToGetSolutions()
	{
		if (mCheck1.isChecked())
		{
			Log.d("Antibody", "Using 1 to get solutions");
			if (mD1.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", D" : "D")
								 );
				solutions++;
			}
			GetSolution(1, mBigC1, "C");
			GetSolution(2, mBigE1, "E");
			GetSolution(3, mLittleC1, "c");
			GetSolution(4, mLittleE1, "e");
			if (mF1.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", f" : "f")
								 );
				solutions++;
			}
			if (mCW1.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", Cw" : "Cw")
								 );
				solutions++;
			}
			if (mV1.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", V" : "V")
								 );
				solutions++;
			}
			GetSolution(8, mBigK1, "K");
			GetSolution(9, mLittleK1, "k");
		}
	}

	void Use2ToGetSolutions()
	{
		if (mCheck2.isChecked())
		{
			Log.d("Antibody", "Using 2 to get solutions");
			if (mD2.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", D" : "D")
								 );
				solutions++;
			}
			GetSolution(1, mBigC2, "C");
			GetSolution(2, mBigE2, "E");
			GetSolution(3, mLittleC2, "c");
			GetSolution(4, mLittleE2, "e");
			if (mF2.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", f" : "f")
								 );
				solutions++;
			}
			if (mCW2.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", Cw" : "Cw")
								 );
				solutions++;
			}
			if (mV2.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", V" : "V")
								 );
				solutions++;
			}
			GetSolution(8, mBigK2, "K");
			GetSolution(9, mLittleK2, "k");
		}
	}

	void Use3ToGetSolutions()
	{
		if (mCheck3.isChecked())
		{
			Log.d("Antibody", "Using 3 to get solutions");
			if (mD3.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", D" : "D")
								 );
				solutions++;
			}
			GetSolution(1, mBigC3, "C");
			GetSolution(2, mBigE3, "E");
			GetSolution(3, mLittleC3, "c");
			GetSolution(4, mLittleE3, "e");
			if (mF3.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", f" : "f")
								 );
				solutions++;
			}
			if (mCW3.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", Cw" : "Cw")
								 );
				solutions++;
			}
			if (mV2.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", V" : "V")
								 );
				solutions++;
			}
			GetSolution(8, mBigK3, "K");
			GetSolution(9, mLittleK3, "k");
		}
	}

	void Use4ToGetSolutions()
	{
		if (mCheck4.isChecked())
		{
			Log.d("Antibody", "Using 4 to get solutions");
			if (mD4.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", D" : "D")
								 );
				solutions++;
			}
			GetSolution(1, mBigC4, "C");
			GetSolution(2, mBigE4, "E");
			GetSolution(3, mLittleC4, "c");
			GetSolution(4, mLittleE4, "e");
			if (mF4.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", f" : "f")
								 );
				solutions++;
			}
			if (mCW4.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", Cw" : "Cw")
								 );
				solutions++;
			}
			if (mV4.getText().equals("+"))
			{
				mSolution.setText(	mSolution.getText() + 
									(solutions > 0 ? ", V" : "V")
								 );
				solutions++;
			}
			GetSolution(8, mBigK4, "K");
			GetSolution(9, mLittleK4, "k");
		}
	}

	void GetSolution(int index, TextView antibody, String letter)
	{
		if (
			(antibodies[index] != 255)
			&&
			antibody.getText().equals("+")
		   )
		{
			mSolution.setText(	mSolution.getText() + 
								(solutions > 0 ? ", " + letter : letter)
							 );
			solutions++;
		}
	}
}
